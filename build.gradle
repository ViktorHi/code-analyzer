plugins {
	id 'org.springframework.boot' version '2.6.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.vicras'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Db
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'

	//Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.7.0'

	//Templates
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	// Lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	// Util(Apache Commons)
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	// Analyzer
	implementation(files("Analyzer-lib.jar"))
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'fr.inria.gforge.spoon:spoon-core:10.0.0'
	implementation 'org.eclipse.jgit:org.eclipse.jgit:2.2.0.201212191850-r'
	implementation 'org.eclipse.jgit:org.eclipse.jgit.ui:6.0.0.202111291000-r'
	implementation 'org.eclipse.jgit:org.eclipse.jgit.http.server:6.0.0.202111291000-r'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	testAnnotationProcessor 'org.hibernate:hibernate-jpamodelgen'
}

test {
	useJUnitPlatform()
}

task stage(dependsOn: ['bootJar'])

tasks.stage.doLast() {
	delete fileTree(dir: "build/distributions")
	delete fileTree(dir: "build/assetCompile")
	delete fileTree(dir: "build/distributions")
	delete fileTree(dir: "build/libs", exclude: "*.jar") //delete everything except jar file inside build folder
}

jar { //Don't package test folders and files
	exclude "test/**"
	exclude "test/**/**"
}

build.mustRunAfter clean //First clean then build to avoid cache issues etc

gradle.taskGraph.whenReady {
	taskGraph ->
		if (taskGraph.hasTask(stage)) { //Don't run test on heroku
			test.enabled = false
		}
}

bootJar { //Exclude test files when pack boot jar file
	enabled = true
	classifier = 'boot'
	exclude "test/**"
	exclude "test/**/**"
}
